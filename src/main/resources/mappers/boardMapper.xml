<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.dreamstart.mapper.BoardMapper">

	<resultMap type="BoardPostDTO" id="boardPostMap">
		<id column="post_id" property="postId" />
		<result column="category" property="category" />
		<result column="title" property="title" />
		<result column="content" property="content" />
		<result column="user_id" property="userId" />
		<result column="is_pinned" property="isPinned" />
		<result column="visibility" property="visibility" />
		<result column="view_count" property="viewCount" />
		<result column="created_at" property="createdAt" />
		<result column="updated_at" property="updatedAt" />
		<result column="published_at" property="publishedAt" />
	</resultMap>

	<resultMap type="BoardCommentDTO" id="boardCommentMap">
		<id column="comment_id" property="commentId" />
		<result column="post_id" property="postId" />
		<result column="user_id" property="userId" />
		<result column="content" property="content" />
		<result column="parent_id" property="parentId" />
		<result column="created_at" property="createdAt" />
	</resultMap>

	<select id="list" resultMap="boardPostMap">
		select * from `board_post`
		order by
		`post_id` DESC
		limit
		#{cri.pageStart},#{cri.perPageNum}
	</select>

	<insert id="postInsert" useGeneratedKeys="true" keyProperty="postId">
		insert into `board_post`
		(`category`,`title`,`content`,`user_id`,`visibility`,`created_at`)
		values
		(#{category},#{title},#{content},#{userId},#{visibility},now())
	</insert>

	<update id="postUpdate">
		update `board_post` set `category`=
		#{category},`title`=#{title},`content`=#{content},
		`visibility`=
		#{visibility},`updated_at`
		= now() where `post_id` = #{postId}
	</update>

	<select id="select" resultMap="boardPostMap">
		select * from `board_post` where `post_Id` = #{postId}
	</select>
	
	<update id="toPrivate">
		update `board_post` set `visibility` = 'PRIVATE'
		,`updated_at` = now() where `post_id` =
		#{postId}
	</update>


	<update id="toPublic">
		update `board_post` set `visibility` = 'PUBLIC'
		,`updated_at` = now() ,`published_at` = now() where `post_id` =
		#{postId}
	</update>

	<update id="viewCount" parameterType="long">
		update `board_post` set
		`view_count` = `view_count`+1 where `post_id` =
		#{postId}
	</update>
</mapper>