<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.dreamstart.mapper.EventMapper">
 	<resultMap type="EventDTO" id="eventMap">
 		<id column="event_id" property="eventId" />
 		<result column="title" property="title" />
 		<result column="description" property="description" />
 		<result column="location" property="location" />
 		<result column="start_date" property="startDate" />
 		<result column="end_date" property="endDate" />
 		<result column="capacity" property="capacity" />
 		<result column="status" property="status" />
 		<result column="visibility" property="visibility" />
 		<result column="poster_url" property="posterUrl" />
 		<result column="created_by" property="createdBy" />
 		<result column="created_by_name" property="createdByName" />
 		<result column="updated_by" property="updatedBy" />
 		<result column="updated_by_name" property="updatedByName" />
 		<result column="created_at" property="createdAt" />
 		<result column="updated_at" property="updatedAt" />
 		<result column="is_paid" property="paid"/>
 		<result column="price" property="price"/>
 		<result column="currency" property="currency"/>
 		<result column="category" property="category"/>

		<!-- 위도, 경도 --> 		
 		<result column="latitude" property="latitude"/>
 		<result column="longitude" property="longitude"/>
 	</resultMap>

	<!-- 이벤트 페이징 -->
	<select id="page" resultMap="eventMap">
		select * 
		from `event_erp`.`event` 
		order by `event_id` DESC
		limit #{cri.pageStart},#{cri.perPageNum}
	</select>
	
	<!-- 드롭다운용 : 이벤트 전체조회 -->
	<select id="all" resultMap="eventMap">
		select
			`event_id`, `title`, `description`, `location`, 
			`start_date`, `end_date`, `capacity`, `status`, 
			`visibility`, `created_by`, 
			`created_at`, `updated_at`, 
			`is_paid`, `price`, `currency`, `category`
		from `event_erp`.`event`
		order by `start_date` desc
	</select>
	
	<!-- 이벤트 아이디로 단건 조회 -->
	<select id="findById" parameterType="long" resultMap="eventMap">
		select 
			e.`event_id`, e.`title`, e.`description`, e.`location`,
			e.`start_date`, e.`end_date`, e.`capacity`,
			e.`status`, e.`visibility`, e.`poster_url`,
			e.`created_by`, e.`created_by_name`,
			e.`updated_by`, e.`updated_by_name`,
			e.`created_at`, e.`updated_at`, 
			e.`is_paid`, e.`price`, e.`currency`, e.`category`
		from `event_erp`.`event` e
		where e.`event_id` = #{eventId}
		limit 1
	</select>
	
	<!-- 이벤트 종료 시각 조회 -->
	<select id="findEndDateByEventId" parameterType="long" resultType="java.time.LocalDateTime">
		select e.`end_date`
		from `event_erp`.`event` e
		where e.`event_id` = #{eventId}
		limit 1
	</select>

	<!-- 총건수 -->
	<select id="count" resultType="int">
		select count(*)
		from `event_erp`.`event`
	</select>

	<!-- 신규등록 (name 컬럼은 db 트리거가 채움) -->
	<insert id="insert" parameterType="EventDTO"
			useGeneratedKeys="true" keyProperty="eventId">
		insert into `event_erp`.`event`
			(`title`, `description`, `location`, `start_date`, `end_date`, 
			`capacity`, `status`, `visibility`, `poster_url`, 
			`created_by`, `updated_by`, `is_paid`, 
			`price`, `currency`, `category`)
		values
			(
			#{title}, #{description}, #{location}, #{startDate}, #{endDate},
			#{capacity}, #{status}, #{visibility}, #{posterUrl},
			#{createdBy}, #{updatedBy}, #{paid}, 
			#{price}, #{currency}, #{category})
	</insert>
	
	<!-- 수정 (name 컬럼은 db 트리거가 채움) -->
	<update id="update" parameterType="EventDTO">
		update `event_erp`.`event`
			set `title` = #{title},
				`description` = #{description}, 
				`location` = #{location}, 
				`start_date` = #{startDate}, 
				`end_date` = #{endDate}, 
				`capacity` = #{capacity}, 
				`status` = #{status}, 
				`visibility` = #{visibility}, 
				`poster_url` = #{posterUrl}, 
				`updated_by` = #{updatedBy},
				`is_paid` = #{paid}, 
				`price` = #{price}, 
				`currency` = #{currency}, 
				`category` = #{category}
		where `event_id` = #{eventId}
	</update>
	
	<!-- 삭제 -->
	<delete id="delete">
		delete from `event_erp`.`event`
		where `event_id` = #{eventId}
	</delete>
	
	<!-- 대표 이미지 경로만 업데이트 -->
	<update id="updatePosterUrl">
		update `event_erp`.`event`
		set `poster_url` = #{posterUrl}
		where `event_id` = #{eventId}
	</update>
	
	<!-- 자동 상태 전환 : end_date 지난 open -> close -->
	<update id="closeExpiredEvents">
		<![CDATA[
			update `event_erp`.`event`
				set `status` = 'CLOSED',
					`updated_at` = NOW()
			where `status` = 'OPEN'
				and `end_date` <= NOW()
		]]>
	</update>
</mapper>
